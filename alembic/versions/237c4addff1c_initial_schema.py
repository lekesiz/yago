"""Initial schema

Revision ID: 237c4addff1c
Revises: 
Create Date: 2025-10-29 18:33:20.158575

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '237c4addff1c'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('projects',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('progress', sa.Integer(), nullable=True),
    sa.Column('brief', sa.Text(), nullable=True),
    sa.Column('config', sa.Text(), nullable=True),
    sa.Column('primary_model', sa.String(length=100), nullable=True),
    sa.Column('agent_role', sa.String(length=100), nullable=True),
    sa.Column('strategy', sa.String(length=50), nullable=True),
    sa.Column('temperature', sa.Float(), nullable=True),
    sa.Column('max_tokens', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('started_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('completed_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('project_path', sa.String(length=500), nullable=True),
    sa.Column('cost_estimate', sa.Float(), nullable=True),
    sa.Column('actual_cost', sa.Float(), nullable=True),
    sa.Column('files_generated', sa.Integer(), nullable=True),
    sa.Column('lines_of_code', sa.Integer(), nullable=True),
    sa.Column('errors', sa.Text(), nullable=True),
    sa.Column('logs', sa.Text(), nullable=True),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.CheckConstraint("status IN ('creating', 'in_progress', 'executing', 'completed', 'failed', 'paused')", name='status_check'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_projects_created_at', 'projects', ['created_at'], unique=False)
    op.create_index('idx_projects_status', 'projects', ['status'], unique=False)
    op.create_index('idx_projects_user_id', 'projects', ['user_id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('last_login', sa.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index('idx_users_email', 'users', ['email'], unique=False)
    op.create_table('ai_provider_usage',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('project_id', sa.String(), nullable=True),
    sa.Column('provider', sa.String(length=50), nullable=False),
    sa.Column('model', sa.String(length=100), nullable=False),
    sa.Column('request_type', sa.String(length=50), nullable=True),
    sa.Column('prompt_tokens', sa.Integer(), nullable=True),
    sa.Column('completion_tokens', sa.Integer(), nullable=True),
    sa.Column('total_tokens', sa.Integer(), nullable=True),
    sa.Column('cost', sa.Float(), nullable=True),
    sa.Column('latency_ms', sa.Integer(), nullable=True),
    sa.Column('success', sa.Boolean(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.CheckConstraint("provider IN ('openai', 'anthropic', 'gemini', 'cursor')", name='provider_check'),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_usage_created_at', 'ai_provider_usage', ['created_at'], unique=False)
    op.create_index('idx_usage_project_id', 'ai_provider_usage', ['project_id'], unique=False)
    op.create_index('idx_usage_provider', 'ai_provider_usage', ['provider'], unique=False)
    op.create_table('clarification_sessions',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('project_id', sa.String(), nullable=True),
    sa.Column('project_idea', sa.Text(), nullable=False),
    sa.Column('depth', sa.String(length=20), nullable=False),
    sa.Column('questions', sa.Text(), nullable=False),
    sa.Column('answers', sa.Text(), nullable=True),
    sa.Column('current_question', sa.Integer(), nullable=True),
    sa.Column('total_questions', sa.Integer(), nullable=False),
    sa.Column('is_completed', sa.Boolean(), nullable=True),
    sa.Column('ai_provider', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('completed_at', sa.TIMESTAMP(), nullable=True),
    sa.CheckConstraint("depth IN ('minimal', 'standard', 'full')", name='depth_check'),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_sessions_created_at', 'clarification_sessions', ['created_at'], unique=False)
    op.create_index('idx_sessions_project_id', 'clarification_sessions', ['project_id'], unique=False)
    op.create_table('generated_files',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('project_id', sa.String(), nullable=True),
    sa.Column('file_path', sa.String(length=500), nullable=False),
    sa.Column('file_type', sa.String(length=50), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('size', sa.Integer(), nullable=True),
    sa.Column('lines', sa.Integer(), nullable=True),
    sa.Column('ai_provider', sa.String(length=50), nullable=True),
    sa.Column('generated_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_files_project_id', 'generated_files', ['project_id'], unique=False)
    op.create_index('idx_files_type', 'generated_files', ['file_type'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_files_type', table_name='generated_files')
    op.drop_index('idx_files_project_id', table_name='generated_files')
    op.drop_table('generated_files')
    op.drop_index('idx_sessions_project_id', table_name='clarification_sessions')
    op.drop_index('idx_sessions_created_at', table_name='clarification_sessions')
    op.drop_table('clarification_sessions')
    op.drop_index('idx_usage_provider', table_name='ai_provider_usage')
    op.drop_index('idx_usage_project_id', table_name='ai_provider_usage')
    op.drop_index('idx_usage_created_at', table_name='ai_provider_usage')
    op.drop_table('ai_provider_usage')
    op.drop_index('idx_users_email', table_name='users')
    op.drop_table('users')
    op.drop_index('idx_projects_user_id', table_name='projects')
    op.drop_index('idx_projects_status', table_name='projects')
    op.drop_index('idx_projects_created_at', table_name='projects')
    op.drop_table('projects')
    # ### end Alembic commands ###
