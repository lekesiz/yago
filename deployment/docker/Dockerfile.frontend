# Multi-stage build for YAGO Frontend
# Optimized for production use

# Stage 1: Builder
FROM node:18-alpine as builder

# Set working directory
WORKDIR /build

# Copy package files
COPY yago/web/frontend/package*.json ./

# Install dependencies
RUN npm ci --only=production

# Copy source code
COPY yago/web/frontend/ ./

# Build application
RUN npm run build

# Stage 2: Runtime
FROM node:18-alpine

# Set labels
LABEL maintainer="YAGO Team <team@yago.dev>"
LABEL description="YAGO Frontend - AI Agent Orchestration Platform UI"
LABEL version="7.2"

# Create non-root user
RUN addgroup -g 1000 yago && adduser -D -u 1000 -G yago yago

# Set working directory
WORKDIR /app

# Install serve for production
RUN npm install -g serve

# Copy built application from builder
COPY --from=builder --chown=yago:yago /build/build ./build

# Switch to non-root user
USER yago

# Set environment variables
ENV NODE_ENV=production \
    PORT=3000

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:3000/ || exit 1

# Run application
CMD ["serve", "-s", "build", "-l", "3000"]
